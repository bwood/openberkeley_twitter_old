<?php

/**
 * Implements hook_ctools_plugin_directory()
 */
function openberkeley_twitter_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'content_types') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Define info about the twitter widget
 */
function openberkeley_twitter_widget() {
  return array(
    'extract element callback' => 'openberkeley_twitter_widget_extract_element_callback',
    'extract href-path pattern' => '|href\s?=\s?"https://twitter.com/([^"]+)"|',
    'extract data-widget-id pattern' => '|data-widget-id\s?=\s?"([^"]+)"|',
    'extract title pattern' => '|data-widget-id\s?=\s?"[^"]+">([^<]+)|',
    'embed callback' => 'openberkeley_twitter_widget_embed_callback',
    'embed template' => '[checked_follow-button]<a class="twitter-timeline" href="https://twitter.com/[href-path]"[checked_data-screen-name] data-widget-id="[data-widget-id]" data-chrome="transparent noborder noheader[nofooter]" data-tweet-limit="[openberkeley_twitter_number_tweets]" data-show-replies="[show_replies]">[title]</a><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>',
  );
}

/**
 * Implements hook_panopoly_magic_forms_to_improve_alter().
 */
function openberkeley_twitter_panopoly_magic_forms_to_improve_alter(&$form_ids) {
  $form_ids[] = 'openberkeley_twitter_openberkeley_twitter_embed_content_type_edit_form';
}

/**
 * Extracts the embed link using a regular expression.
 *
 * @param string $input
 *   Input from the user, either a link or embed code.
 * @param string $pattern
 *   The regexp pattern to match
 *
 * @return string|NULL
 *   Returns the link if valid; otherwise NULL.
 */
function openberkeley_twitter_widget_extract_element_callback($input, $pattern) {
  if (preg_match($pattern, $input, $matches)) {
    return $matches[1];
  }
}

/**
 * Provide type and title of Twitter widget
 *
 * @param $href_path
 * @param $title
 * @return array
 */
function openberkeley_twitter_widget_info($href_path, $title) {
  $parts = explode('/', $href_path);
  if (count($parts) == 1) {
    return array(
      'type' => 'user_timeline',
      'title' => '@' . $parts[0],
      'username' => $parts[0]
    );

  }
  if (count($parts) == 2) {
    if ($parts[1] == 'favorites') {
      return array(
        'type' => 'favorites_timeline',
        'title' => '@' . $parts[0] . "'s Favorite Tweets",
        'username' => $parts[0]
      );

    }
    elseif ($parts[0] == 'hashtag') {
      return array(
        'type' => 'search_timeline',
        'title' => '#' . $parts[1],
        'hashtag' => $parts[1]
      );
    }
  }
  if (count($parts) == 3) {
    if ($parts[1] == 'lists') {
      return array(
        'type' => 'list_timeline',
        'title' => '@' . $parts[0] . "'s " . $parts[2] . " list",
        'username' => $parts[0],
        'list_name' => $parts[2]
      );

    }
    elseif ($parts[1] == 'timelines') {
      return array(
        'type' => 'collection_timeline',
        'title' => '@' . $parts[0] . "'s " . $title . " collection",
        'collection_name' => $title
      );

    }
  }
}

/**
 * Set up template token values based on the type of twitter widget
 *
 * @param $conf
 * @param $href_path
 */
function openberkeley_twitter_widget_types_tokens(&$conf, $href_path, $title) {

  $widget_info = openberkeley_twitter_widget_info($href_path, $title);

  switch ($widget_info['type']) {

    case 'user_timeline':
      $conf['username'] = $widget_info['username'];
      // data-screen-name required for data-tweet-limit to work on a user
      // timeline, I believe.
      $conf['checked_data-screen-name'] = ' data-screen-name="' . check_plain($conf['username']) .'"';
      $conf['checked_follow-button'] = '<a class="twitter-follow-button" href="https://twitter.com/' . check_plain($conf['username']) . '">Follow @' . check_plain($conf['username']) . '</a><br />';
      break;

    case 'favorites_timeline':
      $conf['username'] = $widget_info['username'];
      $conf['checked_data-screen-name'] = '';
      $conf['checked_follow-button'] = '<a class="twitter-follow-button" href="https://twitter.com/' . check_plain($conf['username']) . '">Follow @' . check_plain($conf['username']) . '</a><br />';
      break;

    default:
      $conf['checked_data-screen-name'] = '';
      $conf['checked_follow-button'] = '';
      break;
  }
}

/**
 * Generates the widget embed code using a simple template.
 *
 * @param array $config
 *   An associative array representing the widget configuration.
 * @param array $widget_info
 *   The array describing this widget.
 *
 * @return string
 *   The generated HTML code.
 */
function openberkeley_twitter_widget_embed_callback($config, $template) {
  $replacements = array();
  foreach ($config as $name => $value) {
    if (preg_match("/^checked_/", $name)) {
      // Don't check_plain() if the token name begins with checked_
      $replacements['[' . $name . ']'] = $value;
    }
    else {
      $replacements['[' . $name . ']'] = check_plain($value);
    }
  }

  return strtr($template, $replacements);
}
